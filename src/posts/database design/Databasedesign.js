export const dbdesign = {
    id: 2, 
    img: "https://cdn-icons-png.flaticon.com/512/20/20093.png",
    alt: "database",
    title: 'Database design',
    body: `<html><head><meta content="text/html; charset=UTF-8" http-equiv="content-type"><style type ="text/css">ol{margin: 0; padding: 0}table td,table th{padding: 0}.c2{color: #000000; font-weight: 400; text-decoration: none; vertical-align: baseline; font-size: 11pt; font-family: "Arial"; font-style: normal}.c0{padding-top: 0pt; padding-bottom: 0pt; line-height: 1.15; orphans: 2; widows: 2; text-align: left}.c3{background-color: #ffffff; max-width: 468pt; padding: 72pt 72pt 72pt 72pt}.c1{height: 11pt}.title{padding-top: 0pt; color: #000000; font-size: 26pt; padding-bottom: 3pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}.subtitle{padding-top: 0pt; color: #666666; font-size: 15pt; padding-bottom: 16pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}li{color: #000000; font-size: 11pt; font-family: "Arial"}p{margin: 0; color: #000000; font-size: 11pt; font-family: "Arial"}h1{padding-top: 20pt; color: #000000; font-size: 20pt; padding-bottom: 6pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}h2{padding-top: 18pt; color: #000000; font-size: 16pt; padding-bottom: 6pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}h3{padding-top: 16pt; color: #434343; font-size: 14pt; padding-bottom: 4pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}h4{padding-top: 14pt; color: #666666; font-size: 12pt; padding-bottom: 4pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}h5{padding-top: 12pt; color: #666666; font-size: 11pt; padding-bottom: 4pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; orphans: 2; widows: 2; text-align: left}h6{padding-top: 12pt; color: #666666; font-size: 11pt; padding-bottom: 4pt; font-family: "Arial"; line-height: 1.15; page-break-after: avoid; font-style: italic; orphans: 2; widows: 2; text-align: left}</style></head><body class="c3"><p class="c0"><span>We often have ideas for web sites that we want to build, some of which handle data in databases or elsewhere. In this portfolio post, I want a database that will handle all of my portfolio posts that live on my portfolio site. Having never designed a database for anything like a portfolio site, I first started with the most basic pieces, the text and image content. Having never dealt with a database that stored pictures, I needed to know how to actually get images to appear on my portfolio site. After doing some research and thinking, I determined I wanted to store a reference to an image. Then came the challenge of figuring out how to order all of my content.<br><br></span><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 298.67px;"><img alt="" src="images/image1.png" style="width: 624.00px; height: 298.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c0 c1"><span class="c2"></span></p><p class="c0"><span class="c2">This ERD is the solution that I came up with to handle images as well as post positioning. Each post has text and image content, as well as tag and category classifications. The position table and the post_position association table serve to link everything together. You may also notice the post_category and post_tag association tables are optional.</span></p><p class="c0"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 802.67px;"><img alt="" src="images/image3.png" style="width: 624.00px; height: 802.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c0 c1"><span class="c2"></span></p><p class="c0"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 566.67px;"><img alt="" src="images/image2.png" style="width: 624.00px; height: 566.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c0"><span class="c2">Here we can see what the sql file looks like. It was a little bit tricky to write the check for the post position table that enforces post_text_id or post_image_id isn&rsquo;t null for a given database entry. This could be fleshed out some more, but it will work to get my database up and running. <br><br>You may also notice the use of serial with each of my primary keys, this serves to create a sequence of id&rsquo;s that automatically increments when a new entry is inserted into a table. </span></p></body></html>`
}